<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 用来配置多个redis主机-->
    <!--<bean id="sentinelConfig"-->
    <!--class="org.springframework.data.redis.connection.RedisSentinelConfiguration">-->
    <!--<constructor-arg name="master" value="mymaster"/>-->
    <!--<constructor-arg name="sentinelHostAndPorts">-->
    <!--<set>-->
    <!--<value>127.0.0.1:6379</value>-->
    <!--</set>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!-- 声明配置文件-->
    <context:property-placeholder location="classpath:config/redis-jdbc.properties"/>
    <!-- 连接redis-->
    <!--原先的配置文件 -->
    <!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
    <!--p:hostName="localhost" p:port="6379"/>-->
    <!-- 连接池配置 最大空闲数、最大连接数、最长等待时间、连接是否可用 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <!-- 连接配置 地址、端口 -->
    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.hostName}"/>
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>


    <!--redisTemplate 模板-->
    <!-- 原先的配置文件-->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"-->
    <!--p:connectionFactory-ref="jedisConnectionFactory"/>-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"></property>
    </bean>

    <!-- stringRedisTemplate 模板-->
    <!-- 原先的配置文件-->
    <!--<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">-->
    <!--<property name="connectionFactory" ref="jedisConnectionFactory"/>-->
    <!--</bean>-->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"></property>
    </bean>

</beans>